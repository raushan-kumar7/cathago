<% layout('layouts/boilerplate') %>
<section class="flex min-h-screen bg-gradient-to-b from-blue-300/15 to-teal-200/15">
  <%- include('../partials/sidebar', { currentPage: 'admin-system-activity' }) %>
  <div class="ml-64 w-full">
    <main class="h-[93vh] p-6 overflow-y-auto">
      <div class="flex justify-between items-center mb-6 border-b pb-4">
        <h1 class="text-3xl font-bold text-gray-800">System Activity</h1>
        <div class="flex space-x-3 text-sm text-gray-600">
          <span>Welcome, <%= user.username %></span>
          <span class="text-gray-500">Last Login: <%= new Date().toLocaleString() %></span>
        </div>
      </div>
      
      <!-- Stats Cards -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
        <div class="bg-white rounded-lg shadow-md p-4 border-l-4 border-green-500">
          <h3 class="text-sm font-medium text-gray-500">INFO LOGS</h3>
          <p class="text-2xl font-bold text-gray-800"><%= logs.filter(log => log.logLevel === 'info').length %></p>
        </div>
        <div class="bg-white rounded-lg shadow-md p-4 border-l-4 border-yellow-500">
          <h3 class="text-sm font-medium text-gray-500">WARNING LOGS</h3>
          <p class="text-2xl font-bold text-gray-800"><%= logs.filter(log => log.logLevel === 'warning').length %></p>
        </div>
        <div class="bg-white rounded-lg shadow-md p-4 border-l-4 border-red-500">
          <h3 class="text-sm font-medium text-gray-500">ERROR LOGS</h3>
          <p class="text-2xl font-bold text-gray-800"><%= logs.filter(log => log.logLevel === 'error').length %></p>
        </div>
        <div class="bg-white rounded-lg shadow-md p-4 border-l-4 border-red-600">
          <h3 class="text-sm font-medium text-gray-500">CRITICAL LOGS</h3>
          <p class="text-2xl font-bold text-gray-800"><%= logs.filter(log => log.logLevel === 'critical').length %></p>
        </div>
      </div>

      <!-- Filters -->
      <div class="bg-white p-4 rounded-lg shadow-md mb-4">
        <div class="flex flex-wrap items-center gap-4">
          <div>
            <label for="level-filter" class="block text-sm font-medium text-gray-700 mb-1">Log Level</label>
            <select id="level-filter" class="border border-gray-300 rounded-md p-2 text-sm">
              <option value="all">All Levels</option>
              <option value="info">Info</option>
              <option value="warning">Warning</option>
              <option value="error">Error</option>
              <option value="critical">Critical</option>
            </select>
          </div>
          <div>
            <label for="category-filter" class="block text-sm font-medium text-gray-700 mb-1">Category</label>
            <select id="category-filter" class="border border-gray-300 rounded-md p-2 text-sm">
              <option value="all">All Categories</option>
              <% 
                const categories = [...new Set(logs.map(log => log.category))];
                categories.forEach(category => {
              %>
                <option value="<%= category %>"><%= category %></option>
              <% }) %>
            </select>
          </div>
          <div>
            <label for="date-filter" class="block text-sm font-medium text-gray-700 mb-1">Date Range</label>
            <input type="date" id="date-filter" class="border border-gray-300 rounded-md p-2 text-sm">
          </div>
          <div class="mt-6">
            <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm">Apply Filters</button>
          </div>
        </div>
      </div>

      <!-- Logs Table -->
      <div class="bg-white p-4 rounded-lg shadow-md">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-semibold text-gray-700">Activity Logs</h2>
          <div class="flex space-x-2">
            <button class="text-sm bg-gray-100 hover:bg-gray-200 px-3 py-1 rounded-md">Export CSV</button>
            <button class="text-sm bg-gray-100 hover:bg-gray-200 px-3 py-1 rounded-md">Refresh</button>
          </div>
        </div>
        <div class="overflow-y-auto max-h-[50vh] border rounded-lg">
          <table class="w-full text-sm text-left text-gray-600">
            <thead class="bg-gray-100 text-gray-700 uppercase sticky top-0">
              <tr>
                <th class="px-4 py-2">Timestamp</th>
                <th class="px-4 py-2">User</th>
                <th class="px-4 py-2">Category</th>
                <th class="px-4 py-2">Message</th>
                <th class="px-4 py-2">Level</th>
                <th class="px-4 py-2">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (logs.length > 0) { %>
                <% logs.forEach(log => { %>
                  <tr class="border-b hover:bg-gray-50">
                    <td class="px-4 py-2 whitespace-nowrap"><%= log.createdAt.toLocaleString() %></td>
                    <td class="px-4 py-2"><%= log.User ? log.User.username : 'System' %></td>
                    <td class="px-4 py-2"><span class="px-2 py-1 bg-gray-100 rounded-full text-xs"><%= log.category %></span></td>
                    <td class="px-4 py-2 truncate max-w-md" title="<%= log.message %>"><%= log.message %></td>
                    <td class="px-4 py-2">
                      <span class="px-2 py-1 rounded text-white text-xs
                        <%= log.logLevel === 'info' ? 'bg-green-500' :
                           log.logLevel === 'warning' ? 'bg-yellow-500' :
                           log.logLevel === 'critical' ? 'bg-red-600' : 'bg-red-500' %>">
                        <%= log.logLevel.toUpperCase() %>
                      </span>
                    </td>
                    <td class="px-4 py-2">
                      <button class="text-blue-600 hover:text-blue-800" 
                              onclick="showLogDetails('<%= log.id %>')">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                        </svg>
                      </button>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="6" class="text-center py-4 text-gray-500">No activity logs available</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
        
        <!-- Pagination -->
        <div class="flex justify-between items-center mt-4">
          <div class="text-sm text-gray-600">
            Showing <span class="font-medium">1</span> to <span class="font-medium"><%= Math.min(logs.length, 20) %></span> of <span class="font-medium"><%= logs.length %></span> results
          </div>
          <div class="flex space-x-1">
            <button class="px-3 py-1 bg-gray-100 rounded-md hover:bg-gray-200 disabled:opacity-50" disabled>&laquo; Previous</button>
            <button class="px-3 py-1 bg-blue-600 text-white rounded-md hover:bg-blue-700">1</button>
            <button class="px-3 py-1 bg-gray-100 rounded-md hover:bg-gray-200">2</button>
            <button class="px-3 py-1 bg-gray-100 rounded-md hover:bg-gray-200">3</button>
            <button class="px-3 py-1 bg-gray-100 rounded-md hover:bg-gray-200">Next &raquo;</button>
          </div>
        </div>
      </div>
    </main>
    <%- include('../partials/footer') %>
  </div>
  
  <!-- Log Details Modal -->
  <div id="logDetailsModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
    <div class="bg-white rounded-lg max-w-2xl w-full mx-4 shadow-xl">
      <div class="p-4 border-b flex justify-between items-center">
        <h3 class="text-lg font-semibold text-gray-800">Log Details</h3>
        <button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="p-4 max-h-[80vh] overflow-y-auto" id="logDetailsContent">
        <!-- Log details will be inserted here -->
      </div>
      <div class="p-4 border-t flex justify-end">
        <button onclick="closeModal()" class="px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-md">Close</button>
      </div>
    </div>
  </div>
</section>

<script>
  function showLogDetails(logId) {
    // In a real implementation, you would fetch the log details by ID
    // For this example, we'll just show a sample JSON
    
    const modal = document.getElementById('logDetailsModal');
    const content = document.getElementById('logDetailsContent');
    
    // Find the log in the logs array
    <% const logsJson = JSON.stringify(logs); %>
    const logs = <%= logsJson %>;
    const log = logs.find(l => l.id == logId);
    
    if (log) {
      let metadataHtml = '';
      if (log.metadata) {
        metadataHtml = '<div class="mt-4"><h4 class="text-md font-semibold mb-2">Metadata</h4>';
        metadataHtml += '<pre class="bg-gray-100 p-3 rounded-md overflow-x-auto">' + JSON.stringify(log.metadata, null, 2) + '</pre></div>';
      }
      
      content.innerHTML = `
        <div class="grid grid-cols-2 gap-4">
          <div>
            <p class="text-sm text-gray-500">ID</p>
            <p class="font-medium">${log.id}</p>
          </div>
          <div>
            <p class="text-sm text-gray-500">Timestamp</p>
            <p class="font-medium">${new Date(log.createdAt).toLocaleString()}</p>
          </div>
          <div>
            <p class="text-sm text-gray-500">User</p>
            <p class="font-medium">${log.User ? log.User.username : 'System'}</p>
          </div>
          <div>
            <p class="text-sm text-gray-500">IP Address</p>
            <p class="font-medium">${log.ipAddress || 'N/A'}</p>
          </div>
          <div>
            <p class="text-sm text-gray-500">Category</p>
            <p class="font-medium">${log.category}</p>
          </div>
          <div>
            <p class="text-sm text-gray-500">Level</p>
            <p class="font-medium">${log.logLevel}</p>
          </div>
        </div>
        <div class="mt-4">
          <h4 class="text-md font-semibold mb-2">Message</h4>
          <p class="bg-gray-100 p-3 rounded-md">${log.message}</p>
        </div>
        ${metadataHtml}
      `;
    } else {
      content.innerHTML = '<p>Log not found</p>';
    }
    
    modal.classList.remove('hidden');
  }
  
  function closeModal() {
    const modal = document.getElementById('logDetailsModal');
    modal.classList.add('hidden');
  }
  
  // Close modal when clicking outside
  document.getElementById('logDetailsModal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeModal();
    }
  });
  
  // Filter functionality
  document.getElementById('level-filter').addEventListener('change', function() {
    // Add filtering logic here
  });
  
  document.getElementById('category-filter').addEventListener('change', function() {
    // Add filtering logic here
  });
</script>